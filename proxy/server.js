const express=require('express');const cors=require('cors');const axios=require('axios');const bodyParser=require('body-parser');const app=express();app.use(bodyParser.json({limit:'1mb'}));app.use(cors({origin:true}));const PORT=process.env.PORT||8787;const DEEPL_KEY=process.env.DEEPL_KEY||'';const DEEPL_API_URL=process.env.DEEPL_API_URL||'https://api-free.deepl.com/v2/translate';app.post('/translate',async(req,res)=>{try{const{texts,targetLang}=req.body||{};if(!Array.isArray(texts)||!texts.length)return res.status(400).json({error:'texts must be a non-empty array'});if(!targetLang)return res.status(400).json({error:'targetLang is required'});if(!DEEPL_KEY)return res.status(500).json({error:'DEEPL_KEY is not set on server'});const params=new URLSearchParams();texts.forEach(t=>params.append('text',t));params.append('target_lang',targetLang.toUpperCase());const resp=await axios.post(DEEPL_API_URL,params.toString(),{headers:{'Authorization':`DeepL-Auth-Key ${DEEPL_KEY}`,'Content-Type':'application/x-www-form-urlencoded'},timeout:30000});const translations=(resp.data&&resp.data.translations)?resp.data.translations.map(t=>t.text):[];return res.json({translations});}catch(err){const status=err.response?.status||500;const detail=err.response?.data?.message||err.response?.data?.error||err.message;return res.status(status).json({error:detail||'translation failed'});}});app.get('/health',(req,res)=>res.json({ok:true}));app.listen(PORT,()=>console.log(`Proxy listening on ${PORT}`));